FROM ubuntu:14.04

LABEL maintainer "erstaples@gmail.com"
LABEL description "Installs dependencies to run a locally built Kubernetes cluster using ./hack/local-up-cluster.sh: etcd, docker, go, and more."

RUN apt-get update && apt-get install -y \
    curl 
    
# RUN sudo apt-get install -y \
    # linux-image-extra-$(uname -r) \
    # linux-image-extra-virtual

RUN sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    software-properties-common

RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

RUN sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable" && \
   apt-get update && \
   apt-get install -y \
   docker-ce

ENV OS=linux
ENV ARCH=amd64
ENV ETCD_VER=v3.1.5
ENV GOOGLE_URL=https://storage.googleapis.com/etcd
ENV GITHUB_URL=https://github.com/coreos/etcd/releases/download
ENV DOWNLOAD_URL=${GOOGLE_URL}

RUN rm -f /tmp/etcd-${ETCD_VER}-${OS}-${ARCH}.tar.gz
RUN rm -rf /tmp/test-etcd && mkdir -p /tmp/test-etcd

RUN curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-${OS}-${ARCH}.tar.gz -o /tmp/etcd-${ETCD_VER}-${OS}-${ARCH}.tar.gz
RUN tar xzvf /tmp/etcd-${ETCD_VER}-${OS}-${ARCH}.tar.gz -C /tmp/test-etcd --strip-components=1

RUN mv /tmp/test-etcd/etcd /bin/etcd

ENV GO_VER=1.7.5

RUN curl -L https://storage.googleapis.com/golang/go${GO_VER}.${OS}-${ARCH}.tar.gz -o /tmp/go${GO_VER}.${OS}-${ARCH}.tar.gz && \
    tar xzf /tmp/go${GO_VER}.${OS}-${ARCH}.tar.gz -C /usr/local

ENV GOPATH="/root/go"
ENV PATH="${PATH}:${GOPATH}/bin:/usr/local/go/bin"
ENV GOOS=${OS}
ENV GOARCH=${ARCH}

RUN apt-get install -y gcc

#root of kubernetes repo. must be able to run `./hack/local-up-cluster.sh` from WORKDIR
WORKDIR /root/go/src/github.com/erstaples/kubernetes


#container must run in "privileged" mode
#docker run --privileged -dv $GOPATH:/root/go erstaples/localnetes:0.0.1
#todo: add ./hack/local-up-cluster.sh to cmd. plan out how to run container in build mode vs run mode, or whether build mode should
#even be an option in the container
CMD ["dockerd"]